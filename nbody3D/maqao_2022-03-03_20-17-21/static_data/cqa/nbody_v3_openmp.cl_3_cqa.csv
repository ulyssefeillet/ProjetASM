unroll info;unroll confidence level;unroll loop type;unroll factor;is main/unrolled;RecMII;RecMII (best case for DIV/SQRT);comp_str;comp_opts;nb paths;addr;can be analyzed;path ID;repetitions;extra_unroll_factor;loop length;fit in cache;assumed macro fusion;cycles L1;cycles L1 (best case for DIV/SQRT);cycles L1 if clean;cycles L1 (best case for DIV/SQRT) if clean;cycles L1 if FP arith vectorized;cycles L1 (best case for DIV/SQRT) if FP arith vectorized;cycles L1 if nomem vectorized;cycles L1 (best case for DIV/SQRT) if nomem vectorized;cycles L1 if fully vectorized;cycles L1 (best case for DIV/SQRT) if fully vectorized;cycles L1 if no deps;cycles L1 (best case for DIV/SQRT) if no deps;cycles L1 if hitting next bottleneck;cycles L1 (best case for DIV/SQRT) if hitting next bottleneck;cycles L1 if only FP;cycles L1 (best case for DIV/SQRT) if only FP;cycles L1 if only FP arith;cycles L1 (best case for DIV/SQRT) if only FP arith;bottlenecks;cycles instruction fetch;cycles predecoding;cycles instruction queue;cycles decoding;cycles micro-operation queue;cycles ROB-read;cycles front end;cycles dispatch;cycles P0;cycles P1;cycles P2;cycles P3;cycles P4;cycles P5;cycles P6;uops P0;uops P1;uops P2;uops P3;uops P4;uops P5;uops P6;cycles div sqrt max;cycles div sqrt min;nb instructions;nb uops;nb pure loads;nb impl loads;nb stores;nb stack references;nb total FP operations;nb FP add-sub operations;nb FP mul operations;nb FP fma operations;nb FP div operations;nb FP rcp operations;nb FP sqrt operations;nb FP rsqrt operations;FP operations per cycle L1;bytes loaded or stored per cycle L1;bytes loaded or stored per cycle L1 (best case for DIV/SQRT);bytes prefetched;bytes loaded;bytes stored;bytes loaded or stored;bytes wasted;bytes loaded if fully vectorized;bytes loaded if nomem vectorized;bytes loaded if FP arith vectorized;bytes stored if fully vectorized;bytes stored if nomem vectorized;bytes stored if FP arith vectorized;bytes prefetched if fully vectorized;bytes prefetched if nomem vectorized;bytes prefetched if FP arith vectorized;packed ratio all;packed ratio load;packed ratio store;packed ratio mul;packed ratio add_sub;packed ratio fma;packed ratio div_sqrt;packed ratio other;packed ratio INT all;packed ratio INT load;packed ratio INT store;packed ratio INT mul;packed ratio INT add_sub;packed ratio INT fma;packed ratio INT other;packed ratio FP all;packed ratio FP load;packed ratio FP store;packed ratio FP mul;packed ratio FP add_sub;packed ratio FP fma;packed ratio FP div_sqrt;packed ratio FP other;vec eff ratio all;vec eff ratio load;vec eff ratio store;vec eff ratio mul;vec eff ratio add_sub;vec eff ratio fma;vec eff ratio div_sqrt;vec eff ratio other;vec eff ratio INT all;vec eff ratio INT load;vec eff ratio INT store;vec eff ratio INT mul;vec eff ratio INT add_sub;vec eff ratio INT fma;vec eff ratio INT other;vec eff ratio FP all;vec eff ratio FP load;vec eff ratio FP store;vec eff ratio FP mul;vec eff ratio FP add_sub;vec eff ratio FP fma;vec eff ratio FP div_sqrt;vec eff ratio FP other;stride_0;stride_1;stride_n;stride_unknown;stride_indirect;Nb_FLOP_add_sub;Nb_FLOP_div;Nb_FLOP_mul;Nb_FLOP_fma;Nb_FLOP_rcp;Nb_FLOP_sqrt;Nb_FLOP_rsqrt;Nb_8_bits_loads;Nb_8_bits_stores;Nb_16_bits_loads;Nb_16_bits_stores;Nb_32_bits_loads;Nb_32_bits_stores;Nb_64_bits_loads;Nb_64_bits_stores;Nb_128_bits_loads;Nb_128_bits_stores;Nb_256_bits_loads;Nb_256_bits_stores;Nb_512_bits_loads;Nb_512_bits_stores;Nb_MOVH/LPS/D_loads;Nb_MOVH/LPS/D_stores;used x86 registers;used mmx registers;used xmm registers;used ymm registers;used zmm registers;bytes moved registers;bytes moved GP registers data read;bytes moved GP registers data write;bytes moved GP registers addr read;bytes moved GP registers addr write;bytes moved SIMD registers read;bytes moved SIMD registers write;Nb_insn_ADD/SUBPD_XMM;Nb_insn_ADD/SUBPD_YMM;Nb_insn_ADD/SUBPD_ZMM;Nb_insn_ADD/SUBPS_XMM;Nb_insn_ADD/SUBPS_YMM;Nb_insn_ADD/SUBPS_ZMM;Nb_insn_ADD/SUBSD;Nb_insn_ADD/SUBSS;Nb_insn_DIVPD_XMM;Nb_insn_DIVPD_YMM;Nb_insn_DIVPD_ZMM;Nb_insn_DIVPS_XMM;Nb_insn_DIVPS_YMM;Nb_insn_DIVPS_ZMM;Nb_insn_DIVSD;Nb_insn_DIVSS;Nb_insn_FMAPD_XMM;Nb_insn_FMAPD_YMM;Nb_insn_FMAPD_ZMM;Nb_insn_FMAPS_XMM;Nb_insn_FMAPS_YMM;Nb_insn_FMAPS_ZMM;Nb_insn_FMASD;Nb_insn_FMASS;Nb_insn_MULPD_XMM;Nb_insn_MULPD_YMM;Nb_insn_MULPD_ZMM;Nb_insn_MULPS_XMM;Nb_insn_MULPS_YMM;Nb_insn_MULPS_ZMM;Nb_insn_MULSD;Nb_insn_MULSS;Nb_insn_SQRTPD_XMM;Nb_insn_SQRTPD_YMM;Nb_insn_SQRTPD_ZMM;Nb_insn_SQRTPS_XMM;Nb_insn_SQRTPS_YMM;Nb_insn_SQRTPS_ZMM;Nb_insn_SQRTSD;Nb_insn_SQRTSS;Nb_insn_RSQRTPD_XMM;Nb_insn_RSQRTPD_YMM;Nb_insn_RSQRTPD_ZMM;Nb_insn_RSQRTPS_XMM;Nb_insn_RSQRTPS_YMM;Nb_insn_RSQRTPS_ZMM;Nb_insn_RSQRTSD;Nb_insn_RSQRTSS;Nb_insn_RCPPD_XMM;Nb_insn_RCPPD_YMM;Nb_insn_RCPPD_ZMM;Nb_insn_RCPPS_XMM;Nb_insn_RCPPS_YMM;Nb_insn_RCPPS_ZMM;Nb_insn_RCPSD;Nb_insn_RCPSS;Nb_insn_SS2SD;Nb_insn_SD2SS;Nb_insn_PS2PD-XMM;Nb_insn_PS2PD-YMM;Nb_insn_PS2PD-ZMM;Nb_insn_PD2PS-XMM;Nb_insn_PD2PS-YMM;Nb_insn_PD2PS-ZMM;Nb_insn_INSERT/EXTRACT;Nb_insn_COMPRESS/EXPAND_XMM;Nb_insn_COMPRESS/EXPAND_YMM;Nb_insn_COMPRESS/EXPAND_ZMM;Nb_insn_MMX_to/from;Nb_insn_BLEND/MERGE_XMM;Nb_insn_BLEND/MERGE_YMM;Nb_insn_BLEND/MERGE_ZMM;Nb_insn_SHUFFLE/PERM_XMM;Nb_insn_SHUFFLE/PERM_YMM;Nb_insn_SHUFFLE/PERM_ZMM;Nb_insn_BROADCAST_XMM;Nb_insn_BROADCAST_YMM;Nb_insn_BROADCAST_ZMM;Nb_insn_GATHER/SCATTER_XMM;Nb_insn_GATHER/SCATTER_YMM;Nb_insn_GATHER/SCATTER_ZMM;Nb_insn_MASKMOV/MOV2M_XMM;Nb_insn_MASKMOV/MOV2M_YMM;Nb_insn_MASKMOV/MOV2M_ZMM;Nb_insn_Other_packing_XMM;Nb_insn_Other_packing_YMM;Nb_insn_Other_packing_ZMM;Nb INT arith insn: ADD/SUB-XMM;Nb INT arith insn: ADD/SUB-YMM;Nb INT arith insn: ADD/SUB-ZMM;Nb INT arith insn: CMP-XMM;Nb INT arith insn: CMP-YMM;Nb INT arith insn: CMP-ZMM;Nb INT arith insn: MUL-XMM;Nb INT arith insn: MUL-YMM;Nb INT arith insn: MUL-ZMM;Nb INT arith insn: FMA-XMM;Nb INT arith insn: FMA-YMM;Nb INT arith insn: FMA-ZMM;Nb INT arith insn: SAD-XMM;Nb INT arith insn: SAD-YMM;Nb INT arith insn: SAD-ZMM;Nb INT arith insn: OTHER-XMM;Nb INT arith insn: OTHER-YMM;Nb INT arith insn: OTHER-ZMM;Nb INT logic insn: TEST-XMM;Nb INT logic insn: TEST-YMM;Nb INT logic insn: TEST-ZMM;Nb INT logic insn: AND-XMM;Nb INT logic insn: AND-YMM;Nb INT logic insn: AND-ZMM;Nb INT logic insn: ANDN-XMM;Nb INT logic insn: ANDN-YMM;Nb INT logic insn: ANDN-ZMM;Nb INT logic insn: XOR-XMM;Nb INT logic insn: XOR-YMM;Nb INT logic insn: XOR-ZMM;Nb INT logic insn: OR-XMM;Nb INT logic insn: OR-YMM;Nb INT logic insn: OR-ZMM;Nb INT logic insn: SHIFT-XMM;Nb INT logic insn: SHIFT-YMM;Nb INT logic insn: SHIFT-ZMM;Nb INT other insn: XMM;Nb INT other insn: YMM;Nb INT other insn: ZMM;Nb scalar IOP: add-sub;Nb scalar IOP: cmp;Nb scalar IOP: mul;Nb scalar IOP: div;nb scalar INT operations;Nb SIMD IOP: add-sub;Nb SIMD IOP: cmp;Nb SIMD IOP: mul;Nb SIMD IOP: fma;Nb SIMD IOP;Nb scalar INT arith insn: ADD/SUB;Nb scalar INT arith insn: CMP;Nb scalar INT arith insn: MUL;Nb scalar INT arith insn: OTHER;Nb scalar INT logic insn: AND;Nb scalar INT logic insn: XOR;Nb scalar INT logic insn: OR;Nb scalar INT logic insn: SHIFT;nb scalar INT other insns;Nb loop control insns;ID;MAQAO Nb Path;
NA;NA;NA;NA;NA;4;4;NA;NA;3;401503;true;1;1;NA;118;No;false;12;12;9;9;7.2065217391304;7.2065217391304;6.75;6.75;0.78260869565217;0.78260869565217;NA;NA;11.5;11.5;9;9;4;4;micro-operation queue, ;8;NA;11.5;11.5;12;NA;12;6;1.5;1.5;6;6;3;4;3;1.5;1.5;6;6;3;4;3;0;0;23;NA;0;9;3;0;6;0;0;3;0;0;0;0;0.50, 0.50, ;4;4;0;36;12;48;0;36;2.2058823529412;2.2058823529412;12;0.75;0.75;0;0;0;17.647058823529;0;0;NA;NA;0;NA;60;0;NA;NA;NA;NA;NA;0;20;0;0;NA;NA;0;NA;100;9.9264705882353;6.25;6.25;NA;NA;6.25;NA;18.75;9.375;NA;NA;NA;NA;NA;9.375;10;6.25;6.25;NA;NA;6.25;NA;25;1;6;3;0;0;0;0;0;3;0;0;0;0;0;0;0;9;3;0;0;0;0;0;0;0;0;0;0;11;0;7;0;0;412;24;4;184;8;132;84;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;3;3;3
NA;NA;NA;NA;NA;4;4;NA;NA;3;401503;true;2;1;NA;329;No;false;32;32;28;28;28.4375;28.4375;24.28125;24.28125;17.4375;17.4375;NA;NA;21;21;27;27;11;11;instruction queue, decoding, micro-operation queue, ;21;NA;32;32;32;NA;32;19.5;19.5;19.5;6;6;6;6;3;19.5;19.5;6;6;6;6;3;0;0;64;NA;0;9;3;0;129;123;0;3;0;0;0;0;4.03, 4.03, ;1.5;1.5;0;36;12;48;0;576;35.294117647059;35.294117647059;192;12;12;0;0;0;60.714285714286;0;0;NA;80;0;NA;75.862068965517;33.333333333333;NA;NA;NA;NA;NA;33.333333333333;64;0;0;NA;80;0;NA;86.95652173913;29.352678571429;6.25;6.25;NA;51.25;6.25;NA;27.586206896552;40.625;NA;NA;NA;NA;NA;40.625;28;6.25;6.25;NA;51.25;6.25;NA;24.184782608696;1;6;3;0;0;123;0;0;3;0;0;0;0;0;0;0;9;3;0;0;0;0;0;0;0;0;0;0;12;0;14;4;12;2952;44;16;200;8;1696;1012;0;0;0;6;0;6;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;6;0;0;0;0;0;0;0;3;0;0;3;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;2;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;4;3;3
NA;NA;NA;NA;NA;4;4;NA;NA;3;401503;true;3;1;NA;319;No;false;31;31;28;28;27.4375;27.4375;23.28125;23.28125;16.4375;16.4375;NA;NA;20;20;27;27;11;11;instruction queue, decoding, micro-operation queue, ;20;NA;31;31;31;NA;31;19.5;19.5;19.5;6;6;5;5;3;19.5;19.5;6;6;5;5;3;0;0;62;NA;0;9;3;0;129;123;0;3;0;0;0;0;4.16, 4.16, ;1.5483870967742;1.5483870967742;0;36;12;48;0;576;35.294117647059;35.294117647059;192;12;12;0;0;0;60.714285714286;0;0;NA;80;0;NA;75.862068965517;33.333333333333;NA;NA;NA;NA;NA;33.333333333333;64;0;0;NA;80;0;NA;86.95652173913;29.352678571429;6.25;6.25;NA;51.25;6.25;NA;27.586206896552;40.625;NA;NA;NA;NA;NA;40.625;28;6.25;6.25;NA;51.25;6.25;NA;24.184782608696;1;9;0;0;0;123;0;0;3;0;0;0;0;0;0;0;9;3;0;0;0;0;0;0;0;0;0;0;12;0;14;4;12;2936;44;16;184;8;1696;1012;0;0;0;6;0;6;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;6;0;0;0;0;0;0;0;3;0;0;3;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;2;0;0;0;0;0;0;0;0;2;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;4;3;3
NA;NA;NA;NA;NA;4;4;NA;NA;3;401503;true;AVG;1;NA;255.33333333333;NA;NA;25;25;21.666666666667;21.666666666667;21.027173913043;21.027173913043;18.104166666667;18.104166666667;11.552536231884;11.552536231884;NA;NA;17.5;17.5;21;21;8.6666666666667;8.6666666666667;;16.333333333333;NA;24.833333333333;24.833333333333;25;NA;25;15;13.5;13.5;6;6;4.6666666666667;5;3;13.5;13.5;6;6;4.6666666666667;5;3;0;0;49.666666666667;NA;0;9;3;0;88;82;0;3;0;0;0;0;2.90, 2.90, ;2.3494623655914;2.3494623655914;0;36;12;NA;0;396;24.264705882353;24.264705882353;132;8.25;8.25;0;0;0;46.358543417367;0;0;NA;80;0;NA;70.574712643678;22.222222222222;NA;NA;NA;NA;NA;22.222222222222;49.333333333333;0;0;NA;80;0;NA;91.304347826087;22.877275910364;6.25;6.25;NA;51.25;6.25;NA;24.640804597701;30.208333333333;NA;NA;NA;NA;NA;30.208333333333;22;6.25;6.25;NA;51.25;6.25;NA;24.45652173913;1;7;2;0;0;82;0;0;3;0;0;0;0;0;0;0;9;3;0;0;0;0;0;0;0;0;0;0;11.666666666667;0;11.666666666667;2.6666666666667;8;2100;37.333333333333;12;189.33333333333;8;1174.6666666667;702.66666666667;0;0;0;4;0;4;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;3;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;4;0;0;0;0;0;0;0;2;0;0;2;0;2;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;1.3333333333333;0;0;0;0;0;0;0;0;1.3333333333333;1;0;0;0;1;0;0;0;0;0;1;0;0;0;0;0;0;0;0;3.6666666666667;3;3
